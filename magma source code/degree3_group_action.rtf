{\rtf1\ansi\ansicpg936\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 InnerProductMatrix := DiagonalMatrix(Rationals(), 7, [1,-1,-1,-1,-1,-1,-1]);\
VS := VectorSpace(Rationals(), 7, InnerProductMatrix);\
l0 := VS!Vector([1,0,0,0,0,0,0]);\
l1 := VS!Vector([0,1,0,0,0,0,0]);\
l2 := VS!Vector([0,0,1,0,0,0,0]);\
l3 := VS!Vector([0,0,0,1,0,0,0]);\
l4 := VS!Vector([0,0,0,0,1,0,0]);\
l5 := VS!Vector([0,0,0,0,0,1,0]);\
l6 := VS!Vector([0,0,0,0,0,0,1]);\
l := [* l0,l1,l2,l3,l4,l5,l6 *];\
k7 := VS!Vector([-3,1,1,1,1,1,1]);\
A0 := l0-l1-l2-l3;\
A1 := l1-l2;\
A2 := l2-l3;\
A3 := l3-l4;\
A4 := l4-l5;\
A5 := l5-l6;\
A6 := l0-l1-l2-l3-l4-l5-l6;\
//\
Minustwoclasses := [**];\
Append(~Minustwoclasses, -k7-l[1]);\
for i in [2..#l] do\
for j in [i+1..#l] do\
    Append(~Minustwoclasses, l[i]-l[j]);\
for k in [j+1..#l] do\
    Append(~Minustwoclasses, l[1]-l[i]-l[j]-l[k]);\
end for; end for; end for;\
//\
Minusoneclasses := [**];\
for i in [2..#l] do\
    Append(~Minusoneclasses, l[i]);\
    Append(~Minusoneclasses, 2*l[1]-l[2]-l[3]-l[4]-l[5]-l[6]-l[7]+l[i]);\
for j in [i+1..#l] do\
    Append(~Minusoneclasses, l[1]-l[i]-l[j]);\
    \
end for;end for;\
//define myFunction\
myFunction := function(filename,Minustwocurves)\
PrintFile(filename, filename);\
PrintFile(filename, "(-2)-curves:");\
PrintFile(filename, Minustwocurves);\
Minusonecurves := [**];\
for i in [1..#Minusoneclasses] do\
    v := Minusoneclasses[i];\
    addToArray := true;\
    for j in [1..#Minustwocurves] do\
        if InnerProduct(Minustwocurves[j],v) lt 0 then\
            addToArray := false;\
            break;\
        end if;\
    end for;\
    if addToArray then\
        Append(~Minusonecurves, v);\
    end if;\
end for;\
//\
PrintFile(filename, "# of (-1)-classes = " cat IntegerToString(#Minusoneclasses));\
PrintFile(filename, "# of (-1)-curves = " cat IntegerToString(#Minusonecurves));\
PrintFile(filename, "list of (-1)-curves:");\
PrintFile(filename, Minusonecurves);\
//\
Negativecurves := Minustwocurves;\
for i in [1..#Minusonecurves] do\
    Append(~Negativecurves, Minusonecurves[i]);\
end for;\
AdjacencyMatrix := ZeroMatrix(Integers(), #Negativecurves, #Negativecurves);\
for i in [1..#Negativecurves] do\
for j in [1..#Negativecurves] do\
    AdjacencyMatrix[i][j] := InnerProduct(Negativecurves[i],Negativecurves[j]);\
end for;end for;\
PrintFile(filename, "The intersection matrix of negative curves:");\
PrintFile(filename,AdjacencyMatrix);\
AutoGroup := AutomorphismGroup(AdjacencyMatrix);\
PrintFile(filename, "The automorphism group of dual graph:");\
PrintFile(filename,AutoGroup);\
PrintFile(filename, "Group ID:");\
PrintFile(filename,IdentifyGroup(AutoGroup));\
PrintFile(filename, "================================");\
subgroups := Subgroups(AutoGroup);\
\
for i in [1..#subgroups] do\
PrintFile(filename, "Subgroup No." cat IntegerToString(i) cat "/" cat IntegerToString(#subgroups));\
PrintFile(filename,subgroups[i]`subgroup);\
PrintFile(filename, "Group ID:");\
PrintFile(filename,IdentifyGroup(subgroups[i]`subgroup));\
OrbitsAuto := Orbits(subgroups[i]`subgroup);\
//print "the orbits are ",OrbitsAuto;\
OrbitSum := [];\
for i in [1..#OrbitsAuto] do\
    if OrbitsAuto[i][1] gt #Negativecurves then continue; end if;\
    v := VS!Vector([0,0,0,0,0,0,0]);\
    for j in [1..#OrbitsAuto[i]] do\
        v := v + Negativecurves[OrbitsAuto[i][j]];\
    end for;\
    Append(~OrbitSum, v);\
end for;\
//print "the orbit-sums under the full action are ", OrbitSum;\
Subspace := sub<VS|OrbitSum>;\
PrintFile(filename, "Picard rank = " cat IntegerToString(Dimension(Subspace)));\
PrintFile(filename, "================================");\
end for;\
//\
return Negativecurves;\
end function;\
\
\
\
\
\
filename := "deg3_3A2.txt";\
NC:=myFunction(filename,[ A1,A2,A4,A5,A0,l0-l4-l5-l6]);\
\
filename:= "deg3_D4.txt";\
NC:=myFunction(filename,[ A0,A2,A3,A4]);\
\
filename:="deg3_A3+2A1.txt";\
NC:=myFunction(filename,[ A1,A2,A3,A5,A6+l0 ]);\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 filename:="deg3_4A1.txt";\
NC:=myFunction(filename,[ A1,A3,A5,A6+l0 ]);\
\
filename:="deg3_A5+A1.txt";\
NC:=myFunction(filename,[ A1,A2,A3,A4,A5,A6+l0 ]);\
\
\
}